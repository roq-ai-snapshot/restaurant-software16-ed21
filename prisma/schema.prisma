generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model menu_categories {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  restaurant_id String       @db.Uuid
  name          String       @db.VarChar(255)
  restaurants   restaurants  @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menu_items    menu_items[]
}

model menu_items {
  id              String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  category_id     String          @db.Uuid
  name            String          @db.VarChar(255)
  description     String          @db.VarChar(255)
  price           Int
  menu_categories menu_categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items     order_items[]
}

model order_items {
  id               String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id         String     @db.Uuid
  menu_item_id     String     @db.Uuid
  quantity         Int
  special_requests String?    @db.VarChar(255)
  menu_items       menu_items @relation(fields: [menu_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders           orders     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id                 String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id        String        @db.Uuid
  restaurant_id      String        @db.Uuid
  order_time         DateTime      @db.Timestamp(6)
  pickup_or_delivery String        @db.VarChar(255)
  order_items        order_items[]
  users              users         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants        restaurants   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservations {
  id                String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id       String      @db.Uuid
  restaurant_id     String      @db.Uuid
  reservation_time  DateTime    @db.Timestamp(6)
  table_preferences String?     @db.VarChar(255)
  users             users       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants       restaurants @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurants {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String            @db.VarChar(255)
  address         String            @db.VarChar(255)
  operating_hours String            @db.VarChar(255)
  owner_id        String            @db.Uuid
  menu_categories menu_categories[]
  orders          orders[]
  reservations    reservations[]
  users           users             @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  staff           staff[]
}

model staff {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id       String      @db.Uuid
  restaurant_id String      @db.Uuid
  work_schedule String      @db.VarChar(255)
  restaurants   restaurants @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                  String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  role                String         @db.VarChar(255)
  contact_information String         @db.VarChar(255)
  orders              orders[]
  reservations        reservations[]
  restaurants         restaurants[]
  staff               staff[]
}
